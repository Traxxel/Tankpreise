// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tankpreise.DAL.Data;
using Tankpreise.DAL.Models;

#nullable disable

namespace Tankpreise.DAL.Migrations
{
    [DbContext(typeof(TankpreiseContext))]
    [Migration("20250215121807_AddStationDetailFields")]
    partial class AddStationDetailFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tankpreise.DAL.Models.StationDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("brand")
                        .HasAnnotation("Relational:JsonPropertyName", "brand");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("house_number")
                        .HasAnnotation("Relational:JsonPropertyName", "houseNumber");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("boolean")
                        .HasColumnName("is_open")
                        .HasAnnotation("Relational:JsonPropertyName", "isOpen");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp")
                        .HasColumnName("last_update");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric(10,8)")
                        .HasColumnName("latitude")
                        .HasAnnotation("Relational:JsonPropertyName", "lat");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric(10,8)")
                        .HasColumnName("longitude")
                        .HasAnnotation("Relational:JsonPropertyName", "lng");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<List<OpeningTime>>("OpeningTimes")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("opening_times")
                        .HasAnnotation("Relational:JsonPropertyName", "openingTimes");

                    b.Property<List<OpeningTimeOverride>>("Overrides")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("overrides")
                        .HasAnnotation("Relational:JsonPropertyName", "overrides");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("place")
                        .HasAnnotation("Relational:JsonPropertyName", "place");

                    b.Property<int>("PostCode")
                        .HasColumnType("integer")
                        .HasColumnName("post_code")
                        .HasAnnotation("Relational:JsonPropertyName", "postCode");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(4)")
                        .HasColumnName("state")
                        .HasAnnotation("Relational:JsonPropertyName", "state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street")
                        .HasAnnotation("Relational:JsonPropertyName", "street");

                    b.Property<bool>("WholeDay")
                        .HasColumnType("boolean")
                        .HasColumnName("whole_day")
                        .HasAnnotation("Relational:JsonPropertyName", "wholeDay");

                    b.HasKey("Id");

                    b.ToTable("station_details");
                });

            modelBuilder.Entity("Tankpreise.DAL.Models.StationPreise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Diesel")
                        .HasColumnType("numeric(4,3)")
                        .HasColumnName("diesel")
                        .HasAnnotation("Relational:JsonPropertyName", "diesel");

                    b.Property<decimal>("E10")
                        .HasColumnType("numeric(4,3)")
                        .HasColumnName("e10")
                        .HasAnnotation("Relational:JsonPropertyName", "e10");

                    b.Property<decimal>("E5")
                        .HasColumnType("numeric(4,3)")
                        .HasColumnName("e5")
                        .HasAnnotation("Relational:JsonPropertyName", "e5");

                    b.Property<Guid>("StationsId")
                        .HasColumnType("uuid")
                        .HasColumnName("stations_id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp")
                        .HasColumnName("timestamp")
                        .HasAnnotation("Relational:JsonPropertyName", "timestamp");

                    b.HasKey("Id");

                    b.HasIndex("StationsId", "Timestamp")
                        .IsUnique();

                    b.ToTable("station_preise");
                });
#pragma warning restore 612, 618
        }
    }
}
